%{

#include <stdio.h>
#include <stdlib.h>
#include "string.h"

extern int yylex(void);
extern char *yytext;
extern int linea;
extern FILE *yyin;
void yyerror(char *s);
void para();
char s;

%}

%start sigma

%token SELECT
%token FROM
%token ID
%token ASTERISCO
%token COMA
%token GMEDIO
%token GBAJO
%token PUNTO
%token ORDERBY
%token GROUPBY
%token ASC
%token DESC

%token IGUAL
%token DISTINTO
%token MAYORIGUAL
%token MENORIGUAL
%token MAYOR
%token MENOR
%token WHERE
%token TIPREAL
%token OR
%token AND

%token CREATE
%token ENTERO
%token CHAR
%token INT
%token REAL
%token COMILLA
%token ABREPAR
%token CIERRAPAR
%token DEFAULT

%token NOTNULL
%token P_KEY



%token FIN /* Punto y coma */

%%

sigma: y | x;

x: SELECT a FROM d FIN
 | SELECT a FROM d ORDERBY d e FIN
 | SELECT a FROM d GROUPBY d FIN
 | SELECT a FROM d WHERE condicion ff FIN
;
a: ASTERISCO | ID | ID COMA b | ID PUNTO ID | ID PUNTO ID COMA b | ID PUNTO ID COMA c
;
b: ID | ID COMA b | ID COMA c;

c: ID PUNTO ID | ID PUNTO ID COMA c | ID PUNTO ID COMA b;

d: ID | ID COMA d;

e:
 | ASC
 | DESC
;
ff:
  | ORDERBY d e
  | GROUPBY d
;
log:
   | OR
   | AND
;
comi:
    | COMILLA
;
condicion: sss
;
sss: ABREPAR ID operador comi ID comi CIERRAPAR log condicion
   | ABREPAR ID operador comi TIPREAL comi CIERRAPAR log condicion
   | ABREPAR ID operador comi ENTERO comi CIERRAPAR condicion
   | ABREPAR ID operador comi ID comi CIERRAPAR
   | ABREPAR ID operador comi ENTERO comi CIERRAPAR
   | ABREPAR ID operador comi TIPREAL comi CIERRAPAR
;
operador: MAYOR
        | MENOR
        | IGUAL
        | MENORIGUAL
        | MAYORIGUAL
        | DISTINTO
;



y: CREATE ID ABREPAR m CIERRAPAR FIN ;
m: ID t ABREPAR ENTERO CIERRAPAR | ID t ABREPAR ENTERO CIERRAPAR COMA m | ID t ABREPAR ENTERO CIERRAPAR n ;
m: ID s ABREPAR ENTERO COMA ENTERO CIERRAPAR | ID s ABREPAR ENTERO COMA ENTERO CIERRAPAR COMA m | ID s ABREPAR ENTERO COMA ENTERO CIERRAPAR o ;
m: ID u ABREPAR ENTERO CIERRAPAR | ID u ABREPAR ENTERO CIERRAPAR COMA m | ID u ABREPAR ENTERO CIERRAPAR r ;
m: ID t ABREPAR ENTERO CIERRAPAR p | ID s ABREPAR ENTERO COMA ENTERO CIERRAPAR p | ID u ABREPAR ENTERO CIERRAPAR p ;

t: CHAR;
s: REAL;
u: INT;
n: DEFAULT COMILLA ID COMILLA | DEFAULT COMILLA ID COMILLA COMA m;
o: DEFAULT COMILLA ENTERO COMA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMA ENTERO COMILLA COMA m;
r: DEFAULT COMILLA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMILLA COMA m;

p: NOTNULL | NOTNULL COMA m | NOTNULL q | NOTNULL COMA mmm ;

q: P_KEY | P_KEY COMA mm ;

mm: ID tt ABREPAR ENTERO CIERRAPAR | ID tt ABREPAR ENTERO CIERRAPAR COMA mm | ID tt ABREPAR ENTERO CIERRAPAR nn ;
mm: ID ss ABREPAR ENTERO COMA ENTERO CIERRAPAR | ID ss ABREPAR ENTERO COMA ENTERO CIERRAPAR COMA mm | ID ss ABREPAR ENTERO COMA ENTERO CIERRAPAR oo ;
mm: ID uu ABREPAR ENTERO CIERRAPAR | ID uu ABREPAR ENTERO CIERRAPAR COMA mm | ID uu ABREPAR ENTERO CIERRAPAR rr;
mm: ID tt ABREPAR ENTERO CIERRAPAR pp | ID ss ABREPAR ENTERO COMA ENTERO CIERRAPAR pp | ID uu ABREPAR ENTERO CIERRAPAR pp ;
tt: CHAR;
ss: REAL;
uu: INT;
nn: DEFAULT COMILLA ID COMILLA | DEFAULT COMILLA ID COMILLA COMA mm;
oo: DEFAULT COMILLA ENTERO COMA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMA ENTERO COMILLA COMA mm;
rr: DEFAULT COMILLA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMILLA COMA mm;
pp: NOTNULL | NOTNULL COMA mm ;

mmm: ID ttt ABREPAR ENTERO CIERRAPAR | ID ttt ABREPAR ENTERO CIERRAPAR COMA mmm | ID ttt ABREPAR ENTERO CIERRAPAR nnn ;
mmm: ID sss ABREPAR ENTERO COMA ENTERO CIERRAPAR | ID sss ABREPAR ENTERO COMA ENTERO CIERRAPAR COMA mmm | ID sss ABREPAR ENTERO COMA ENTERO CIERRAPAR ooo ;
mmm: ID uuu ABREPAR ENTERO CIERRAPAR | ID uuu ABREPAR ENTERO CIERRAPAR COMA mmm | ID uuu ABREPAR ENTERO CIERRAPAR rrr ;
mmm: ID ttt ABREPAR ENTERO CIERRAPAR ppp | ID sss ABREPAR ENTERO COMA ENTERO CIERRAPAR ppp | ID uuu ABREPAR ENTERO CIERRAPAR ppp ;
mmm: P_KEY ABREPAR ID CIERRAPAR | P_KEY ABREPAR ID CIERRAPAR COMA mmmm;
ttt: CHAR;
sss: REAL;
uuu: INT;
nnn: DEFAULT COMILLA ID COMILLA | DEFAULT COMILLA ID COMILLA COMA mmm;
ooo: DEFAULT COMILLA ENTERO COMA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMA ENTERO COMILLA COMA mmm;
rrr: DEFAULT COMILLA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMILLA COMA mmm;
ppp: NOTNULL | NOTNULL COMA mmm ;

mmmm: ID tttt ABREPAR ENTERO CIERRAPAR | ID tttt ABREPAR ENTERO CIERRAPAR COMA mmmm | ID tttt ABREPAR ENTERO CIERRAPAR nnnn ;
mmmm: ID ssss ABREPAR ENTERO COMA ENTERO CIERRAPAR | ID ssss ABREPAR ENTERO COMA ENTERO CIERRAPAR COMA mmmm | ID ssss ABREPAR ENTERO COMA ENTERO CIERRAPAR oooo ;
mmmm: ID uuuu ABREPAR ENTERO CIERRAPAR | ID uuuu ABREPAR ENTERO CIERRAPAR COMA mmmm | ID uuuu ABREPAR ENTERO CIERRAPAR rrrr ;
mmmm: ID tttt ABREPAR ENTERO CIERRAPAR pppp | ID ssss ABREPAR ENTERO COMA ENTERO CIERRAPAR pppp | ID uuuu ABREPAR ENTERO CIERRAPAR pppp ;
tttt: CHAR;
ssss: REAL;
uuuu: INT;
nnnn: DEFAULT COMILLA ID COMILLA | DEFAULT COMILLA ID COMILLA COMA mmmm;
oooo: DEFAULT COMILLA ENTERO COMA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMA ENTERO COMILLA COMA mmmm;
rrrr: DEFAULT COMILLA ENTERO COMILLA | DEFAULT COMILLA ENTERO COMILLA COMA mmmm;
pppp: NOTNULL | NOTNULL COMA mmmm ;






%%


void yyerror(char *s) {

printf ("Error sintactico");

}


int main (int argc, char *argv[]) {

yyin=fopen(argv[1],"rt");


yyparse();

return 0;

}
